/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Fenetre;

import java.awt.event.KeyEvent;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author USER
 */
public class RechercheCommandeClient extends javax.swing.JFrame {

      private String mailAdress;
    private int mois;
    private int annee;
    private int jour;
    private int heure;
    private int minute;
    private int seconde;
    /**
     * Creates new form RechercheCommande client
     */
    public RechercheCommandeClient() {
        initComponents();
        dateHeure();
    }

     public RechercheCommandeClient(String adresseMail) {
        initComponents();
        this.mailAdress = adresseMail;
        dateHeure();
    }
     
         public String getMailAdress() {
        return this.mailAdress;
    }
    
          Connection con;
    PreparedStatement pst;
    ResultSet rs;
    
    //.......CONNEXION BDD........
    
    public void connexion() {
        try {
            //maconnexion= new Connexion("shopping","root","");
            Class.forName("com.mysql.cj.jdbc.Driver");

            //nameDatabase="shopping";  //nom de la database sur wampserveur
            String urlDatabase = "jdbc:mysql://localhost:3306/shopping";

            //création d'une connexion JDBC à la base 
            con = DriverManager.getConnection(urlDatabase,"root", "root");
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
        // sous programme pour avoir la date actuelle et l'heure actuelle
    public void dateHeure() {
        Thread tr = new Thread() {
            @Override
            public void run() {
                for (;;) {
                    try {
                        Calendar calendrier = new GregorianCalendar();

                        annee = calendrier.get(Calendar.YEAR);
                        mois = calendrier.get(Calendar.MONTH);
                        jour = calendrier.get(Calendar.DAY_OF_MONTH);

                        heure = calendrier.get(Calendar.HOUR_OF_DAY);
                        minute = calendrier.get(Calendar.MINUTE);
                        seconde = calendrier.get(Calendar.SECOND);

                        mois = mois + 1;
                        textDate.setText(jour + "/" + mois + "/" + annee);
                        textHeure.setText(heure + ":" + minute + ":" + seconde);
                        sleep(1000);

                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }

        };
        tr.start();

    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        textDate = new javax.swing.JLabel();
        textHeure = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        textRecherche = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        buttonRetour = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        textDate.setText("date");

        textHeure.setText("heure");

        jLabel1.setFont(new java.awt.Font("Sitka Small", 1, 36)); // NOI18N
        jLabel1.setText("Recherche de Commandes");

        textRecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textRechercheActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("SimSun", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Rechercher");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonRetour.setBackground(new java.awt.Color(0, 0, 0));
        buttonRetour.setFont(new java.awt.Font("SimSun", 1, 14)); // NOI18N
        buttonRetour.setForeground(new java.awt.Color(255, 255, 255));
        buttonRetour.setText("Retour");
        buttonRetour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRetourActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.setCellSelectionEnabled(true);
        jTable1.setRowHeight(26);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("SimSun", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Voir toutes les commandes");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(textDate)
                .addGap(18, 18, 18)
                .addComponent(textHeure)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(121, 121, 121)
                .addComponent(buttonRetour)
                .addGap(28, 28, 28))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(textRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(308, 308, 308))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(135, 135, 135))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(buttonRetour)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textDate)
                            .addComponent(textHeure))))
                .addGap(45, 45, 45)
                .addComponent(textRecherche, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void textRechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textRechercheActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textRechercheActionPerformed

    //.....APPUIE SUR RECHERCHE....
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       //..........AFFICHAGE BDD ARTICLE.........
       try{
            connexion();
          String v=textRecherche.getText(); //on récupère la valeur tapé 
          
            String commande[]={"ID","Article","Quantité","Prix_Articles","Prix_Total","id_client"};
            String montrer[]= new String [6];
            
            DefaultTableModel model= new DefaultTableModel (null, commande);
            
            //requête sql
            String sql= "SELECT * from commande WHERE ID='"+v+"' OR Article='"+v+"' OR id_client='"+v+"'";
            
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
         while(rs.next()) {
             montrer[0]= rs.getString("ID");
             montrer[1]= rs.getString("Article");
             montrer[2]= rs.getString("Quantité");
             montrer[3]= rs.getString("Prix_Articles");
             montrer[4]= rs.getString("Prix_Total");
             montrer[5]= rs.getString("id_client");
             
             model.addRow(montrer);
             
         }
         jTable1.setModel(model);
         con.close();
        }catch(Exception e){
             e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void buttonRetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRetourActionPerformed
         // TODO add your handling code here:
        RechercheCommandeClient.super.dispose();
        connexion();

        //PageEmpConnecte retourPageEmp = new PageEmpConnecte(getMailAdress());
        PageEmpConnecte retourPageEmp = new PageEmpConnecte(getMailAdress());
        retourPageEmp.setVisible(true);
    }//GEN-LAST:event_buttonRetourActionPerformed

    //..........VOIR TOUTE LA BDD............
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            try{
            connexion();
          String v=textRecherche.getText(); //on récupère la valeur tapé 
          
          String commande[]={"ID","Article","Quantité","Prix_Articles","Prix_Total","id_client"};  
          String montrer[]= new String [6];
            
            DefaultTableModel model= new DefaultTableModel (null, commande);
            
            //requête sql
            String sql= "SELECT * from commande";
            
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
         while(rs.next()) {
             montrer[0]= rs.getString("marque");
             montrer[1]= rs.getString("prix_unitaire");
             montrer[2]= rs.getString("prix_pack");
             montrer[3]= rs.getString("Quantite_pack");
             montrer[4]= rs.getString("reference");
             montrer[5]= rs.getString("stock");
             montrer[6]= rs.getString("Description");
             montrer[7]= rs.getString("image");
             
             model.addRow(montrer);
             
         }
         jTable1.setModel(model);
         con.close();
        }catch(Exception e){
             e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RechercheCommandeClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonRetour;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel textDate;
    private javax.swing.JLabel textHeure;
    private javax.swing.JTextField textRecherche;
    // End of variables declaration//GEN-END:variables
}
